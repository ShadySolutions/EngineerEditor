//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Engineer.Draw.OpenGL {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Shaders {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Shaders() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Engineer.Draw.OpenGL.Shaders", typeof(Shaders).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400
        ///uniform vec4 Color;
        ///in vec3 F_Vertex;
        ///in vec3 F_Normal;
        ///in vec3 F_TextureUV;
        ///out vec4 FinalColor;
        ///
        ///void main() 
        ///{ 
        ///	FinalColor = Color;
        ///}.
        /// </summary>
        internal static string Default_Fragment {
            get {
                return ResourceManager.GetString("Default_Fragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400
        ///uniform mat4 ModelView;
        ///uniform mat4 Projection;
        ///in vec3 V_Vertex;
        ///in vec3 V_Normal;
        ///in vec2 V_TextureUV;
        ///out vec3 F_Vertex;
        ///out vec3 F_Normal;
        ///out vec2 F_TextureUV;
        ///
        ///void main()
        ///{
        ///	F_Vertex = V_Vertex;
        ///	F_Normal = V_Normal;
        ///	F_TextureUV = V_TextureUV;
        ///	gl_Position = Projection * ModelView * vec4(V_Vertex, 1);
        ///}.
        /// </summary>
        internal static string Default_Vertex {
            get {
                return ResourceManager.GetString("Default_Vertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400
        ///struct Light
        ///{
        ///	bool Enabled;
        ///	vec3 Position;
        ///	vec3 Ambient;
        ///	vec3 Diffuse;
        ///	vec3 Attenuation;
        ///};
        ///struct Material
        ///{
        ///	float Shininess;
        ///	vec3 Specular;
        ///	vec3 Ambient;
        ///};
        ///uniform bool EnabledLighting;
        ///uniform vec3 CameraPosition;
        ///uniform vec4 Color;
        ///uniform mat4 ModelView;
        ///uniform mat4 Projection;
        ///uniform Material CurrentMaterial;
        ///uniform Light Lights[1];
        ///in vec3 F_Vertex;
        ///in vec3 F_Normal;
        ///in vec3 F_TextureUV;
        ///out vec4 FinalColor;
        ///
        ///void main()
        ///{
        ///	FinalColor = Color;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Example_Fragment {
            get {
                return ResourceManager.GetString("Example_Fragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400
        ///uniform mat4 ModelView;
        ///uniform mat4 Projection;
        ///in vec3 V_Vertex;
        ///in vec3 V_Normal;
        ///in vec2 V_TextureUV;
        ///out vec3 F_Vertex;
        ///out vec3 F_Normal;
        ///out vec2 F_TextureUV;
        ///
        ///void main()
        ///{
        ///	F_Vertex = V_Vertex;
        ///	F_Normal = V_Normal;
        ///	F_TextureUV = V_TextureUV;
        ///	gl_Position = Projection * ModelView * vec4(V_Vertex, 1);
        ///}.
        /// </summary>
        internal static string Example_Vertex {
            get {
                return ResourceManager.GetString("Example_Vertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 400
        /////Structures
        ///struct Light
        ///{
        ///	vec3 Color;
        ///	vec3 Position;
        ///	vec3 Attenuation;
        ///	float Intensity;
        ///};
        /////Globals
        ///uniform vec3 CameraPosition;
        ///uniform mat4 ModelView;
        ///uniform mat4 Projection;
        ///uniform Light Lights[1];
        /////Input/Output
        ///in vec3 F_Vertex;
        ///in vec3 F_Normal;
        ///in vec3 F_TextureUV;
        ///out vec4 FinalColor;
        ///
        ///void Ambient(in Light Lights[1], in vec4 Ambient, out vec4 Result)
        ///{
        ///	Result = Ambient;
        ///}
        ///
        ///void Diffuse(in Light Lights[1], in vec4 Color, out vec4 Result)
        ///{
        ///	mat3 Norm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Partial_Fragment {
            get {
                return ResourceManager.GetString("Partial_Fragment", resourceCulture);
            }
        }
    }
}
